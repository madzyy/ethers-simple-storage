const ethers = require("ethers");
const fs = require("fs");
require("dotenv").config();

async function main() {
  // ginache rpc url: http:0.0.0.0:8545
  const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);
  //const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL);

  const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

  const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8");
  const binary = fs.readFileSync(
    "./SimpleStorage_sol_SimpleStorage.bin",
    "utf8"
  );
  const contractFactory = new ethers.ContractFactory(abi, binary, wallet);
  console.log("deploying, please wait....");
  const contract = await contractFactory.deploy();
  // console.log(contract);

  // const deploymentReceipt = await contract.deployTransaction.wait(1);
  // console.log(deploymentReceipt);

  const currentFavoriteNumber = await contract.retrieve();
  console.log(
    `the current favorite number is ${currentFavoriteNumber.toString()}`
  );

  const transactionResponse = await contract.store("7");
  const receipt = transactionResponse.wait(1);
  const updatedFavoriteNumber = await contract.retrieve();

  console.log(`the updated favorite number is ${updatedFavoriteNumber}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });

// const ethers = require("ethers");
// const fs = require("fs");

// async function main() {
//   const provider = new ethers.JsonRpcProvider("http://127.0.0.1:7545");
//   const wallet = new ethers.Wallet(
//     "0x2d9ca57f847f4bbf35ee25d58b3a9e2d4dc15e70c30f4b35c290e73273cec709",
//     provider
//   );
//   const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8");
//   const binary = fs.readFileSync(
//     "./SimpleStorage_sol_SimpleStorage.bin",
//     "utf8"
//   );

//   const contractFactory = new ethers.ContractFactory(abi, binary, wallet);

//   console.log("deploying please wait ...");

//   const contract = await contractFactory.deploy();
//   // console.log(contract);

//   const currentFavoriteNumber = await contract.retrieve();
//   console.log(`current favorite number is ${currentFavoriteNumber.toString()}`);

//   const transactionResponse = await contract.store("5");
//   const updatedFavoriteNumber = await contract.retrieve();

//   console.log(
//     `the updated favorite number is ${updatedFavoriteNumber.toString()}`
//   );

// const deploymentReceipt = await contract.deploymentTransaction();
// console.log(deploymentReceipt);
// nonce = await wallet.getNonce();
// console.log(nonce);
// const tx = {
//   nonce: 7,
//   gasPrice: 20000000000,
//   gasLimit: 6721975,
//   to: null,
//   value: 0,
//   data: "608060405260405180604001604052806040518060400160405280600781526020017f4a657373696361000000000000000000000000000000000000000000000000008152508152602001601e8152506001600082015181600001908162000068919062000303565b506020820151816001015550503480156200008257600080fd5b50620003ea565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200010b57607f821691505b602082108103620001215762000120620000c3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200018b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200014c565b6200019786836200014c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001e4620001de620001d884620001af565b620001b9565b620001af565b9050919050565b6000819050919050565b6200020083620001c3565b620002186200020f82620001eb565b84845462000159565b825550505050565b600090565b6200022f62000220565b6200023c818484620001f5565b505050565b5b8181101562000264576200025860008262000225565b60018101905062000242565b5050565b601f821115620002b3576200027d8162000127565b62000288846200013c565b8101602085101562000298578190505b620002b0620002a7856200013c565b83018262000241565b50505b505050565b600082821c905092915050565b6000620002d860001984600802620002b8565b1980831691505092915050565b6000620002f38383620002c5565b9150826002028217905092915050565b6200030e8262000089565b67ffffffffffffffff8111156200032a576200032962000094565b5b620003368254620000f2565b6200034382828562000268565b600060209050601f8311600181146200037b576000841562000366578287015190505b620003728582620002e5565b865550620003e2565b601f1984166200038b8662000127565b60005b82811015620003b5578489015182556001820191506020850194506020810190506200038e565b86831015620003d55784890151620003d1601f891682620002c5565b8355505b6001600288020188555050505b505050505050565b61067780620003fa6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e64cec1146100465780636057361d146100645780636f760f4114610080575b600080fd5b61004e61009c565b60405161005b919061012e565b60405180910390f35b61007e60048036038101906100799190610189565b6100a5565b005b61009a600480360381019061009591906102fc565b6100af565b005b60008054905090565b8060008190555050565b600360405180604001604052808481526020018381525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081610104919061056f565b506020820151816001015550505050565b6000819050919050565b61012881610115565b82525050565b6000602082019050610143600083018461011f565b92915050565b6000604051905090565b600080fd5b600080fd5b61016681610115565b811461017157600080fd5b50565b6000813590506101838161015d565b92915050565b60006020828403121561019f5761019e610153565b5b60006101ad84828501610174565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610209826101c0565b810181811067ffffffffffffffff82111715610228576102276101d1565b5b80604052505050565b600061023b610149565b90506102478282610200565b919050565b600067ffffffffffffffff821115610267576102666101d1565b5b610270826101c0565b9050602081019050919050565b82818337600083830152505050565b600061029f61029a8461024c565b610231565b9050828152602081018484840111156102bb576102ba6101bb565b5b6102c684828561027d565b509392505050565b600082601f8301126102e3576102e26101b6565b5b81356102f384826020860161028c565b91505092915050565b6000806040838503121561031357610312610153565b5b600083013567ffffffffffffffff81111561033157610330610158565b5b61033d858286016102ce565b925050602061034e85828601610174565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103aa57607f821691505b6020821081036103bd576103bc610363565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e8565b61042f86836103e8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061046c61046761046284610115565b610447565b610115565b9050919050565b6000819050919050565b61048683610451565b61049a61049282610473565b8484546103f5565b825550505050565b600090565b6104af6104a2565b6104ba81848461047d565b505050565b5b818110156104de576104d36000826104a7565b6001810190506104c0565b5050565b601f821115610523576104f4816103c3565b6104fd846103d8565b8101602085101561050c578190505b610520610518856103d8565b8301826104bf565b50505b505050565b600082821c905092915050565b600061054660001984600802610528565b1980831691505092915050565b600061055f8383610535565b9150826002028217905092915050565b61057882610358565b67ffffffffffffffff811115610591576105906101d1565b5b61059b8254610392565b6105a68282856104e2565b600060209050601f8311600181146105d957600084156105c7578287015190505b6105d18582610553565b865550610639565b601f1984166105e7866103c3565b60005b8281101561060f578489015182556001820191506020850194506020810190506105ea565b8683101561062c5784890151610628601f891682610535565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220cc5620c7d7f991a552d8f0119ff4a74720ab0fadbbe96b12cea2745ecc45b53464736f6c63430008130033",
//   chainId: 1337,
// };
// const sentTxResponse = await wallet.sendTransaction(tx);
// await sentTxResponse.wait(1);
// console.log(sentTxResponse);
// }

// main()
//   .then(() => process.exit(0))
//   .catch((error) => {
//     console.error(error);
//     process.exit(1);
//   });
